
tpotnuru@LIN65005823 MINGW64 ~
$ cd desktop

tpotnuru@LIN65005823 MINGW64 ~/desktop
$ mkdir project_dir

tpotnuru@LIN65005823 MINGW64 ~/desktop
$ cd project_dir

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir
$ git init
Initialized empty Git repository in C:/Users/TPOTNURU/Desktop/project_dir/.git/

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ ls index.html
index.html

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        New Text Document.txt
        index.html

nothing added to commit but untracked files present (use "git add" to track)

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git add index.html

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   index.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        New Text Document.txt


tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git add --all

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   New Text Document.txt
        new file:   index.html


tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git add --all

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   New Text Document (2).txt
        new file:   New Text Document.txt
        new file:   bluestyle.css
        new file:   index.html


tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git add index.html

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   New Text Document (2).txt
        new file:   New Text Document.txt
        new file:   bluestyle.css
        new file:   index.html


tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git commit -m 'First release of Hello World!'
[master (root-commit) 31c9b18] First release of Hello World!
 4 files changed, 18 insertions(+)
 create mode 100644 New Text Document (2).txt
 create mode 100644 New Text Document.txt
 create mode 100644 bluestyle.css
 create mode 100644 index.html

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git status --short M index.html
 M index.html

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git status --shortM index.html
error: unknown option `shortM'
usage: git status [<options>] [--] <pathspec>...

    -v, --verbose         be verbose
    -s, --short           show status concisely
    -b, --branch          show branch information
    --show-stash          show stash information
    --ahead-behind        compute full ahead/behind values
    --porcelain[=<version>]
                          machine-readable output
    --long                show status in long format (default)
    -z, --null            terminate entries with NUL
    -u, --untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)
    --ignored[=<mode>]    show ignored files, optional modes: traditional, matching, no. (Default: traditional)
    --ignore-submodules[=<when>]
                          ignore changes to submodules, optional when: all, dirty, untracked. (Default: all)
    --column[=<style>]    list untracked files in columns
    --no-renames          do not detect renames
    -M, --find-renames[=<n>]
                          detect renames, optionally set similarity index
    --show-ignored-directory
                          (DEPRECATED: use --ignore=matching instead) Only show directories that match an ignore pattern name.
    --no-lock-index       (DEPRECATED: use `git --no-optional-locks status` instead) Do not lock the index


tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git commit -a -m 'updated index.html with a new line'
[master 81867dc] updated index.html with a new line
 1 file changed, 1 insertion(+)

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ ls info.txt
info.txt

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    New Text Document.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        info.txt

no changes added to commit (use "git add" and/or "git commit -a")

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git rm --cached info.txt
fatal: pathspec 'info.txt' did not match any files

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    New Text Document.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        info.txt

no changes added to commit (use "git add" and/or "git commit -a")

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git add info.txt

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git status
On branch master
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   info.txt

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    New Text Document.txt


tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git rm --cached info.txt
rm 'info.txt'

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    New Text Document.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        info.txt

no changes added to commit (use "git add" and/or "git commit -a")

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git commit -a -m "updated index.html with a new line"
[master ac8beef] updated index.html with a new line
 1 file changed, 0 insertions(+), 0 deletions(-)
 delete mode 100644 New Text Document.txt

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git log
commit ac8beefb928d9931b419b7fbd0355a589cb77928 (HEAD -> master)
Author: teju <tejaswi.potnuru531@gmail.com>
Date:   Fri Dec 10 09:42:32 2021 +0530

    updated index.html with a new line

commit 81867dca315f0bd861e97d5ce37d68253e7df35a
Author: teju <tejaswi.potnuru531@gmail.com>
Date:   Fri Dec 10 09:34:48 2021 +0530

    updated index.html with a new line

commit 31c9b184968bc5fcfdb81fb8d75642667ead0446
Author: teju <tejaswi.potnuru531@gmail.com>
Date:   Fri Dec 10 09:30:41 2021 +0530

    First release of Hello World!

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git commit -m 'first release !'
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        info.txt

nothing added to commit but untracked files present (use "git add" to track)

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git commit -a -m 'updated index.html with a new line'
On branch master
Untracked files:
  (use "git add <file>..." to include in what will be committed)
        info.txt

nothing added to commit but untracked files present (use "git add" to track)

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git commit -help
usage: git commit [<options>] [--] <pathspec>...

    -q, --quiet           suppress summary after successful commit
    -v, --verbose         show diff in commit message template

Commit message options
    -F, --file <file>     read message from file
    --author <author>     override author for commit
    --date <date>         override date for commit
    -m, --message <message>
                          commit message
    -c, --reedit-message <commit>
                          reuse and edit message from specified commit
    -C, --reuse-message <commit>
                          reuse message from specified commit
    --fixup [(amend|reword):]commit
                          use autosquash formatted message to fixup or amend/reword specified commit
    --squash <commit>     use autosquash formatted message to squash specified commit
    --reset-author        the commit is authored by me now (used with -C/-c/--amend)
    --trailer <trailer>   add custom trailer(s)
    -s, --signoff         add a Signed-off-by trailer
    -t, --template <file>
                          use specified template file
    -e, --edit            force edit of commit
    --cleanup <mode>      how to strip spaces and #comments from message
    --status              include status in commit message template
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit

Commit contents options
    -a, --all             commit all changed files
    -i, --include         add specified files to index for commit
    --interactive         interactively add files
    -p, --patch           interactively add changes
    -o, --only            commit only specified files
    -n, --no-verify       bypass pre-commit and commit-msg hooks
    --dry-run             show what would be committed
    --short               show status concisely
    --branch              show branch information
    --ahead-behind        compute full ahead/behind values
    --porcelain           machine-readable output
    --long                show status in long format (default)
    -z, --null            terminate entries with NUL
    --amend               amend previous commit
    --no-post-rewrite     bypass post-rewrite hook
    -u, --untracked-files[=<mode>]
                          show untracked files, optional modes: all, normal, no. (Default: all)
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character


tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$ git revert Head
[master 35e3d42] Revert "updated index.html with a new line"
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 New Text Document.txt

tpotnuru@LIN65005823 MINGW64 ~/desktop/project_dir (master)
$
